25;00;01;00;4;je;End of a jump;This function ends the return jump made\nby other function, causing the current address\nto go back to the saved one.\n\nNo additional parameters required.;0
25;00;02;00;8;jnr;Jump without saving the return address;This function makes a jump to address in\nParam_1 without saving the return address.;1;uint32_t_P;Jump destination
25;00;03;00;8;jwr;Jump with saving the return address;This function makes a jump to address in\nParam_1 with saving the return address.\nCurrent address goes back to saved return\naddress as soon as \"je\" function is executed.;1;uint32_t_P;Jump destination
25;00;07;00;14;wv;Write value in memory;This function writes provided value\nat a given pointer.;4;uint32_t;Memory pointer;uint32_t;Memory offset;uint32_t_T1;Value type;V1;Saved value
25;00;08;00;14;ivb;Increment value by;This function increments value at\ngiven pointer in memory by given value.;4;uint32_t;Memory pointer;uint32_t;Memory offset;uint32_t_T1;Value type;V1;Value
25;00;09;00;14;svb;Subtract value by;This function subtracts value at\ngiven pointer in memory by given value.;4;uint32_t;Memory pointer;uint32_t;Memory offset;uint32_t_T1;Value type;V1;Value
25;00;0A;00;14;mvb;Multiply value by;This function multiplies value at\ngiven pointer in memory by given value.;4;uint32_t;Memory pointer;uint32_t;Memory offset;uint32_t_T1;Value type;V1;Value
25;00;0B;00;14;dvb;Divide value by;This function divides value at\ngiven pointer in memory by given value.;4;uint32_t;Memory pointer;uint32_t;Memory offset;uint32_t_T1;Value type;V1;Value
25;00;0C;00;C;ivbo;Increment value by 1;This function increments value at\ngiven pointer in memory by 1.;2;uint32_t;Memory pointer;uint32_t;Memory offset;
25;00;0D;00;C;svbo;Subtract value by 1;This function subtracts value at\ngiven pointer in memory by 1.;2;uint32_t;Memory pointer;uint32_t;Memory offset;
25;00;17;00;18;jwe;Jump when equal;This function reads a value\nfrom given pointer and compares\nit to given float.\nWhen values are equal, a jump\nis being made, specified in Param_5.;5;uint32_t;Value A pointer;uint32_t;Value A offset;uint32_t_T1;Value B type;V1;Value B;uint32_t_P;Jump destination
25;00;18;00;18;jwne;Jump when not equal;This function reads a value\nfrom given pointer and compares\nit to given float.\nWhen values are not equal, a jump\nis being made, specified in Param_5.;5;uint32_t;Value A pointer;uint32_t;Value A offset;uint32_t_T1;Value B type;V1;Value B;uint32_t_P;Jump destination
25;00;31;00;0;dev1;Developer comment;Comment left by the developers of the game.;1;string;Text
25;00;32;00;0;dev2;Developer comment;Comment left by the developers of the game.;1;string;Text
25;03;01;00;0;im;Interactive menu;This function opens an\ninteractive menu with pointer that's\nbeing executed after selection.;2;string;Text;uint32_t_P;Jump destination
25;03;02;00;0;imj;Interactive menu jump;This function executes a jump\nwhen nothing was selected in\nthe previous menu instructions.(?);1;uint32_t_P;Jump destination
25;09;09;00;0;lf;Load file;Description;3;uint32_t;Value A;uint32_t;Value B;string;Filename
25;FF;FF;00;32;TEST;TEST;Purely for testing purposes.;4;string;STRING1;string;STRING2;uint32_t;UINT3;string;STRING4