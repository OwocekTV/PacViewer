25;00;01;00;4;je;End of a jump;This function ends the return jump made\nby other function, causing the current address\nto go back to the saved one.\n\nNo additional parameters required.;0
25;00;02;00;8;jnr;Jump without saving the return address;This function makes a jump to address in\nParam_1 without saving the return address.;1;uint32_t_P;Jump destination
25;00;03;00;8;jwr;Jump with saving the return address;This function makes a jump to address in\nParam_1 with saving the return address.\nCurrent address goes back to saved return\naddress as soon as \"je\" function is executed.;1;uint32_t_P;Jump destination
25;00;07;00;14;wv;Write value in memory;This function writes provided value\nat a given pointer.;4;uint32_t;Memory pointer;uint32_t;Memory offset;uint32_t_T1;Value type;V1;Saved value
25;00;08;00;14;ivb;Increment value by;This function increments value at\ngiven pointer in memory by given value.;4;uint32_t;Memory pointer;uint32_t;Memory offset;uint32_t_T1;Value type;V1;Value
25;00;09;00;14;svb;Subtract value by;This function subtracts value at\ngiven pointer in memory by given value.;4;uint32_t;Memory pointer;uint32_t;Memory offset;uint32_t_T1;Value type;V1;Value
25;00;0A;00;14;mvb;Multiply value by;This function multiplies value at\ngiven pointer in memory by given value.;4;uint32_t;Memory pointer;uint32_t;Memory offset;uint32_t_T1;Value type;V1;Value
25;00;0B;00;14;dvb;Divide value by;This function divides value at\ngiven pointer in memory by given value.;4;uint32_t;Memory pointer;uint32_t;Memory offset;uint32_t_T1;Value type;V1;Value
25;00;0C;00;C;ivbo;Increment value by 1;This function increments value at\ngiven pointer in memory by 1.;2;uint32_t;Memory pointer;uint32_t;Memory offset;
25;00;0D;00;C;svbo;Subtract value by 1;This function subtracts value at\ngiven pointer in memory by 1.;2;uint32_t;Memory pointer;uint32_t;Memory offset;
25;00;17;00;18;jwe;Jump when equal;This function reads a value\nfrom given pointer and compares\nit to given float.\nWhen values are equal, a jump\nis being made, specified in Param_5.;5;uint32_t;Value A pointer;uint32_t;Value A offset;uint32_t_T1;Value B type;V1;Value B;uint32_t_P;Jump destination
25;00;18;00;18;jwne;Jump when not equal;This function reads a value\nfrom given pointer and compares\nit to given float.\nWhen values are not equal, a jump\nis being made, specified in Param_5.;5;uint32_t;Value A pointer;uint32_t;Value A offset;uint32_t_T1;Value B type;V1;Value B;uint32_t_P;Jump destination
25;00;1D;00;18;jwkp;Jump when key pressed;This function calls a jump from the pointer\nonce a specific key press is called.;5;uint32_t;Unknown;uint32_t;Unknown;uint32_t;Value Type;KEYBIND_ID;Key pressed;uint32_t_P;Jump destination
25;00;1F;00;18;jwms;Jump when menu selected;This function calls a jump from the pointer\nonce a specific menu entry is selected,\ndefined by one of interactive menu functions.;5;uint32_t;Unknown;uint32_t;Unknown;uint32_t;Menu option;uint32_t;Unknown;uint32_t_P;Jump destination
25;00;27;00;0;flen;Enable flag;This function enables a hardcoded game flag.;1;COUNT_uint32_t;Flag amount
25;00;28;00;0;flds;Disable flag;This function disables a hardcoded game flag.;1;COUNT_uint32_t;Flag amount
25;00;31;00;0;dev1;Developer comment;Comment left by the developers of the game.;1;string;Text
25;00;32;00;0;dev2;Developer comment;Comment left by the developers of the game.;1;string;Text
25;03;01;00;0;im;Interactive menu;This function opens an\ninteractive menu with pointer that's\nbeing executed after selection.;2;string;Text;uint32_t_P;Jump destination
25;03;02;00;0;imj;Interactive menu jump;This function executes a jump\nwhen nothing was selected in\nthe previous menu instructions.(?);1;uint32_t_P;Jump destination
25;03;0D;00;0;imd;Interactive menu dialog;This function opens an interactive menu dialog\nwith multiple choice selection.;16;uint32_t;Unknown;uint32_t;Unknown;uint32_t;Left shift(?);uint32_t;X position;uint32_t;Top shift(?);uint32_t;Y position;uint32_t;MSG ID offset;uint32_t;Unknown;KEYBIND_ID;Back button;uint32_t;Unknown;uint32_t;Highlight option;uint32_t;Unknown;uint32_t;Display title;uint32_t;Unknown;uint32_t;Center box(?);COUNT_uint32_t;Amount of options
25;09;09;00;0;lf;Load file;Description;3;uint32_t;Value A;uint32_t;Value B;string;Filename
25;1F;09;00;1C;ensp;Entity spawn;Spawns an entity with given index and ID.\nFirst two values differ when spawning\nin Debug mode.;6;uint32_t;Debug 1;uint32_t;Debug 2;uint32_t_T1;Value type;V1;Entity Index;uint32_t;Value type;ENTITY_ID;Entity ID
25;1F;0A;00;1C;encl;Entity clones;Copies the same exact entity X times.;6;uint32_t;Debug 1;uint32_t;Debug 2;uint32_t_T1;Value type;V1;Entity Index;uint32_t_T2;Value type;V2;Clone amount
25;1F;0D;00;1C;ensz;Entity size;Defines entity's size.;6;uint32_t;Debug 1;uint32_t;Debug 2;uint32_t_T1;Value type;V1;Entity Index;uint32_t_T2;Value type;V2;Size
25;1F;0E;00;24;enps;Entity position;Defines entity's position.;8;uint32_t;Debug 1;uint32_t;Debug 2;uint32_t_T1;Value type;V1;Entity Index;uint32_t_T2;Value type;V2;XPos;uint32_t_T2;Value type;V2;YPos
25;1F;17;00;1C;enis;Entity initial state;Defines entity's initial state. (?);6;uint32_t;Debug 1;uint32_t;Debug 2;uint32_t_T1;Value type;V1;Entity Index;uint32_t_T2;Value type;V2;State
25;1F;18;00;1C;enrt;Entity respawn times;Defines how many times entity may respawn.;6;uint32_t;Debug 1;uint32_t;Debug 2;uint32_t_T1;Value type;V1;Entity Index;uint32_t_T2;Value type;V2;Amount
25;1F;1E;00;1C;envr;Entity view range;Defines seeing distance for an entity.;6;uint32_t;Debug 1;uint32_t;Debug 2;uint32_t_T1;Value type;V1;Entity Index;uint32_t_T2;Value type;V2;View range
25;1F;1F;00;1C;enlp;Entity loot pool;Defines loot pool for an entity.;6;uint32_t;Debug 1;uint32_t;Debug 2;uint32_t_T1;Value type;V1;Entity Index;uint32_t_T2;Value type;V2;Loot pool
25;1F;20;00;2C;eneq;Entity equipment;Gives equipment to an entity.;10;uint32_t;Debug 1;uint32_t;Debug 2;uint32_t_T1;Value type;V1;Entity Index;uint32_t_T2;Value type;V2;Equipment Index;uint32_t;Value type;EQUIP_ID;Equipment ID;uint32_t;Debug 3;uint32_t;Debug 4
25;FF;FF;00;0;TEST;TEST;Purely for testing purposes.;5;string;STRING1;string;STRING2;uint32_t;UINT3;string;STRING4;COUNT_uint32_t;Param amount